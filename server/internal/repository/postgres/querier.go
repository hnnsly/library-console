// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package postgres

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddBookAuthor(ctx context.Context, arg AddBookAuthorParams) error
	CheckReaderOverdueBooks(ctx context.Context, readerID uuid.UUID) (int64, error)
	CreateAuthor(ctx context.Context, fullName string) (*CreateAuthorRow, error)
	CreateBook(ctx context.Context, arg CreateBookParams) (*CreateBookRow, error)
	CreateBookCopy(ctx context.Context, arg CreateBookCopyParams) (*CreateBookCopyRow, error)
	CreateFine(ctx context.Context, arg CreateFineParams) (*CreateFineRow, error)
	CreateReader(ctx context.Context, arg CreateReaderParams) (*CreateReaderRow, error)
	CreateReadingHall(ctx context.Context, arg CreateReadingHallParams) (*CreateReadingHallRow, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (*CreateUserRow, error)
	DeactivateReader(ctx context.Context, id uuid.UUID) error
	DeactivateUser(ctx context.Context, id uuid.UUID) error
	GetActiveReaders(ctx context.Context) ([]*GetActiveReadersRow, error)
	GetAllAuthors(ctx context.Context) ([]*GetAllAuthorsRow, error)
	GetAllBooks(ctx context.Context) ([]*GetAllBooksRow, error)
	GetAllReadingHalls(ctx context.Context) ([]*GetAllReadingHallsRow, error)
	GetAllUsers(ctx context.Context) ([]*GetAllUsersRow, error)
	GetAuthorBooks(ctx context.Context, authorID uuid.UUID) ([]*GetAuthorBooksRow, error)
	GetAuthorById(ctx context.Context, id uuid.UUID) (*GetAuthorByIdRow, error)
	GetAvailableBookCopy(ctx context.Context, copyCode string) (*GetAvailableBookCopyRow, error)
	GetBookAuthors(ctx context.Context, bookID uuid.UUID) ([]*GetBookAuthorsRow, error)
	GetBookById(ctx context.Context, id uuid.UUID) (*GetBookByIdRow, error)
	GetBookCopiesByBookId(ctx context.Context, bookID uuid.UUID) ([]*GetBookCopiesByBookIdRow, error)
	GetBookCopiesByHall(ctx context.Context, hallID *uuid.UUID) ([]*GetBookCopiesByHallRow, error)
	GetBookCopyByCode(ctx context.Context, copyCode string) (*GetBookCopyByCodeRow, error)
	GetBookCopyById(ctx context.Context, copyID uuid.UUID) (*GetBookCopyByIdRow, error)
	GetBooksToReturn(ctx context.Context) ([]*GetBooksToReturnRow, error)
	GetDailyVisitStats(ctx context.Context, arg GetDailyVisitStatsParams) ([]*GetDailyVisitStatsRow, error)
	GetHallsDashboard(ctx context.Context) ([]*GetHallsDashboardRow, error)
	GetHourlyVisitStats(ctx context.Context, arg GetHourlyVisitStatsParams) ([]*GetHourlyVisitStatsRow, error)
	GetOrCreateAuthor(ctx context.Context, fullName string) (*GetOrCreateAuthorRow, error)
	GetOverdueBooks(ctx context.Context) ([]*GetOverdueBooksRow, error)
	GetReaderActiveBooks(ctx context.Context, readerID uuid.UUID) ([]*GetReaderActiveBooksRow, error)
	GetReaderById(ctx context.Context, id uuid.UUID) (*GetReaderByIdRow, error)
	GetReaderByTicketNumber(ctx context.Context, ticketNumber string) (*GetReaderByTicketNumberRow, error)
	GetReaderFines(ctx context.Context, readerID uuid.UUID) ([]*GetReaderFinesRow, error)
	GetReaderUnpaidFinesTotal(ctx context.Context, readerID uuid.UUID) (interface{}, error)
	GetReaderVisitHistory(ctx context.Context, readerID uuid.UUID) ([]*GetReaderVisitHistoryRow, error)
	GetReadingHallById(ctx context.Context, id uuid.UUID) (*GetReadingHallByIdRow, error)
	GetRecentBookOperations(ctx context.Context, arg GetRecentBookOperationsParams) ([]*GetRecentBookOperationsRow, error)
	GetRecentHallVisits(ctx context.Context, arg GetRecentHallVisitsParams) ([]*GetRecentHallVisitsRow, error)
	GetUnpaidFines(ctx context.Context) ([]*GetUnpaidFinesRow, error)
	GetUserById(ctx context.Context, id uuid.UUID) (*GetUserByIdRow, error)
	GetUserByUsername(ctx context.Context, username string) (*GetUserByUsernameRow, error)
	IssueBook(ctx context.Context, arg IssueBookParams) (*IssueBookRow, error)
	PayFine(ctx context.Context, fineID uuid.UUID) (*PayFineRow, error)
	RegisterHallEntry(ctx context.Context, arg RegisterHallEntryParams) (*RegisterHallEntryRow, error)
	RegisterHallExit(ctx context.Context, arg RegisterHallExitParams) (*RegisterHallExitRow, error)
	RemoveBookAuthor(ctx context.Context, arg RemoveBookAuthorParams) error
	ReturnBook(ctx context.Context, bookCopyID uuid.UUID) (*ReturnBookRow, error)
	SearchAuthors(ctx context.Context, searchTerm *string) ([]*SearchAuthorsRow, error)
	SearchBooks(ctx context.Context, arg SearchBooksParams) ([]*SearchBooksRow, error)
	SearchReaders(ctx context.Context, arg SearchReadersParams) ([]*SearchReadersRow, error)
	UpdateBook(ctx context.Context, arg UpdateBookParams) (*UpdateBookRow, error)
	UpdateBookCopies(ctx context.Context, arg UpdateBookCopiesParams) error
	UpdateBookCopyStatus(ctx context.Context, arg UpdateBookCopyStatusParams) error
	UpdateHallVisitorCount(ctx context.Context, arg UpdateHallVisitorCountParams) error
	UpdateReader(ctx context.Context, arg UpdateReaderParams) (*UpdateReaderRow, error)
	UpdateReadingHall(ctx context.Context, arg UpdateReadingHallParams) (*UpdateReadingHallRow, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (*UpdateUserRow, error)
}

var _ Querier = (*Queries)(nil)
